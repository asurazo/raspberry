#include "AXWIFI.h"
String inputString = "";         // a String to hold incoming data
bool stringComplete = false;  // whether the string is complete
#include <Wire.h>                   // Include library
#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define OLED_RESET -1
#include <Adafruit_NeoPixel.h>
#define NUMSLEDs  2
#define PINSLEDs  10
Adafruit_NeoPixel SLEDs = Adafruit_NeoPixel(NUMSLEDs,PINSLEDs, NEO_RGB + NEO_KHZ800);
Adafruit_SSD1306 OLED(OLED_RESET); 
int BH1750address = 0x23; 
byte buff[2];
void setup() {
  // initialize serial:
  ax.begin();
  SLEDs.begin(); // This initializes the NeoPixel library.
  SLEDs.show(); // Initialize all SLEDs to 'off'
  Serial.begin(19200);
  
  // reserve 200 bytes for the inputString:
  inputString.reserve(200);
  pinMode(D3,INPUT);
  OLED.begin(SSD1306_SWITCHCAPVCC, 0x3C);
}

void loop() 
{
  uint16_t val = 0;
  BH1750_Init(BH1750address);             // Initial BH1750
  delay(200);
  if (2 == BH1750_Read(BH1750address))    // Read and check data from BH1750
  {

    
    int val = map(analogRead(A0),0,1023,0,255);
   SLEDs.setPixelColor(0, SLEDs.Color(val, 0, 0)); //Adjust brightness, Color red 
  SLEDs.setPixelColor(1, SLEDs.Color(0, 0, val)); //Adjust brightness, Color blue
  SLEDs.show();





  
    val = ((buff[0] << 8) | buff[1]) / 1.2;
    OLED.clearDisplay();               //Clear display
    OLED.setTextColor(WHITE);          //Set text color
    OLED.setCursor(0, 0);              //Set display start position
    OLED.setTextSize(3);               //Set text size x1
    OLED.println("BH1750");          //Type message
    OLED.setCursor(0, 35);            //Set display postion
    OLED.println(String(val) + " lx"); // Show result value
    OLED.display();   
   // Serial.print("BH1750 :: ");          //Type message
          //Set display postion
    Serial.println(String(val) + " lx"); // Show result value

  }
  delay(150);
  serialEvent();
  // print the string when a newline arrives:
  if (stringComplete) {
    //Serial.println(inputString);
    inputString.trim();
    ax.OledSetText(0,0,"%s ",(char*)inputString.c_str()); 
    ax.OledShow();
    // clear the string:
    inputString = "";
    stringComplete = false;
  }
}

int BH1750_Read(int address)              // BH1750 read data function
{
  int i = 0;
  Wire.beginTransmission(address);
  Wire.requestFrom(address, 2);
  while (Wire.available())
  {
    buff[i] = Wire.read();                // Read one byte
    i++;
  }
  Wire.endTransmission();
  return i;
}
void BH1750_Init(int address)             // BH1750 initial function
{
  Wire.beginTransmission(address);
  Wire.write(0x10);                       // Start operation
  Wire.endTransmission();
}

  

void serialEvent() {
  while (Serial.available()) {
    // get the new byte:
    char inChar = (char)Serial.read();
    // add it to the inputString:
    inputString += inChar;
    // if the incoming character is a newline, set a flag so the main loop can
    // do something about it:
    if (inChar == '\n') {
      stringComplete = true;
    }
  }
}
